name: Github Actions

on: ["push", "pull_request"]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        architecture: [x86, x64]
        os:
          [
            ubuntu-latest,
            ubuntu-20.04,
            macos-13,
            macos-12,
            windows-latest,
            windows-2019,
          ]
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: ubuntu-20.04
            architecture: x86
          - os: macos-13
            architecture: x86
          - os: macos-12
            architecture: x86
        include:
          - os: ubuntu-latest
            architecture: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (Linux/arm64 Only)
        if: runner.os == 'Linux' && matrix.architecture == "arm64"
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install
        run: |
          pip install .

      - name: Test with pytest
        run: |
          pip install pytest
          pytest --pyargs bottleneck

  check:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder for CI checks in PRs
        run: echo "Done"

  build_wheels:
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU (Linux Only)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_SKIP: pp*
          CIBW_ARCHS_LINUX: auto aarch64

      - name: Store wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  release:
    needs: [build_wheels, build_sdist]
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN}}
