name: Github Actions

on: ["push", "pull_request"]

jobs:
  test-linux-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.13", "3.13t"]
        os:
          # Note that macos-13 is x86-64 (deprecated already),
          # and macos-latest is arm64.
          [ubuntu-22.04, ubuntu-24.04-arm, macos-13, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install
        run: |
          pip install . -v

      - name: Test with pytest
        run: |
          pip install pytest
          cd doc  # avoid picking up bottleneck from the source dir
          pytest --pyargs bottleneck

  test-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.13", "3.13t"]
        architecture: [x86, x64]
        os: [windows-latest, windows-2019]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}


      - if: ${{ endsWith(matrix.python-version, 't') }}
        run: |
          pip install pytest-run-parallel
          echo "PYTEST_ADDOPTS=--parallel-threads=4" >> "$GITHUB_ENV"

      - name: Install
        run: |
          pip install . -v

      - name: Test with pytest
        run: |
          pip install pytest
          cd doc
          pytest --pyargs bottleneck

  check:
    # This job is here is the "Required" one for merging PRs, and
    # it only runs after all the `test-*` jobs above have run. Hence
    # it serves as a check that CI actually ran before a PR gets merged.
    needs: [test-linux-macos, test-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder for CI checks in PRs
        run: echo "Done"

  build_wheels:
    needs: [test-linux-macos, test-windows]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest, ubuntu-24.04-arm]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_SKIP: "pp* *_i686"
          CIBW_ENABLE: cpython-freethreading

      - name: Store wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: [test-linux-macos, test-windows]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz

  release:
    needs: [build_wheels, build_sdist]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN}}
